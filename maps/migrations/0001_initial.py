# Generated by Django 3.2.16 on 2023-01-20 16:32

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('leakers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('map_title', models.CharField(max_length=100)),
                ('map_description', models.TextField()),
                ('map_creation_date', models.DateTimeField(default=datetime.datetime.now)),
                ('map_photo', models.ImageField(blank=True, upload_to='maps')),
                ('zone_number', models.IntegerField(default=0)),
                ('sensor_number', models.IntegerField(default=0)),
                ('pipe_number', models.IntegerField(default=0)),
                ('leakervehicle_number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Pipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pipe_status', models.CharField(choices=[('good', 'Good'), ('unknown', 'Unknown'), ('critical', 'Critical')], max_length=20)),
                ('pipe_description', models.TextField()),
                ('pipe_creation_date', models.DateTimeField(default=datetime.datetime.now)),
                ('pipe_type', models.CharField(max_length=50)),
                ('pipe_title', models.CharField(max_length=100)),
                ('pipe_length', models.FloatField()),
                ('pipe_material', models.CharField(max_length=50)),
                ('pipe_diametre', models.FloatField()),
                ('pipe_acces_number', models.IntegerField(default=0)),
                ('pipe_mark_number', models.IntegerField(default=0)),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_pipes', to='maps.map')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('zone_date', models.DateTimeField()),
                ('zone_status', models.CharField(choices=[('notStart', 'Not Started'), ('Pending', 'Pending'), ('Completed', 'Completed')], max_length=20)),
                ('zone_coordinates', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, size=200)),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_zones', to='maps.map')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_coordinates', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('sensor_creationdate', models.DateTimeField(default=datetime.datetime.now)),
                ('sensor_photo', models.ImageField(blank=True, upload_to='sensor')),
                ('sensor_type', models.CharField(max_length=50)),
                ('sensor_title', models.CharField(max_length=100)),
                ('sensor_description', models.TextField()),
                ('sensor_frequency', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2), blank=True, size=None)),
                ('sensor_Indication', models.CharField(choices=[('critical', 'Critical'), ('notable', 'Notable'), ('good', 'Good'), ('unknown', 'Unknown'), ('empty', 'Empty')], max_length=20)),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_sensors', to='maps.map')),
            ],
        ),
        migrations.CreateModel(
            name='PipeAcces',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pipe_acces_coordinates', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('pipe_acces_title', models.CharField(max_length=100)),
                ('pipe_acces_description', models.TextField()),
                ('pipe_acces_type', models.CharField(choices=[('HouseValve', 'House Valve'), ('FirePole', 'Fire Pole'), ('FireHydrantValve', 'Fire Hydrant Valve'), ('Other', 'Other')], max_length=20)),
                ('pipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipe_accesses', to='maps.pipe')),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mark_points', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('mark_creation_date', models.DateTimeField(default=datetime.datetime.now)),
                ('mark_photo', models.ImageField(blank=True, upload_to='marks')),
                ('mark_description', models.TextField()),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipe_marks', to='maps.map')),
                ('pipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipe_marks', to='maps.pipe')),
            ],
        ),
        migrations.CreateModel(
            name='LeakerVehicle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leakervehicle_title', models.CharField(max_length=100)),
                ('leakervehicle_description', models.TextField()),
                ('leaker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='leakers.leaker')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_leaker_vehicles', to='maps.map')),
            ],
        ),
    ]
